From 9645ecafda0b311e0aa13580d4ba0fa9ca6fac3f Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Sun, 5 Feb 2023 15:57:11 +0000
Subject: [PATCH 1/2] Fixes for cross-building

Signed-off-by: Ilies CHERGUI <ilies.chergui@gmail.com>
Signed-off-by: Matt Madison <matt@madison.systems>
---
 bindings/CMakeLists.txt    | 67 ++++++++++++--------------------------
 bindings/include/pyds.hpp  |  4 +--
 bindings/include/utils.hpp |  2 +-
 3 files changed, 23 insertions(+), 50 deletions(-)

diff --git a/bindings/CMakeLists.txt b/bindings/CMakeLists.txt
index 043324d..a081111 100644
--- a/bindings/CMakeLists.txt
+++ b/bindings/CMakeLists.txt
@@ -13,7 +13,8 @@
 # See the License for the specific language governing permissions and
 # limitations under the License.
 
-cmake_minimum_required(VERSION 3.5 FATAL_ERROR)
+cmake_minimum_required(VERSION 3.12 FATAL_ERROR)
+project(pyds DESCRIPTION "Python bindings for Deepstream")
 
 # Setting values not set by user
 function(check_variable_set variable_name default_value)
@@ -22,10 +23,11 @@ function(check_variable_set variable_name default_value)
         endif()
 endfunction()
 
-check_variable_set(PYTHON_MAJOR_VERSION 3)
-check_variable_set(PYTHON_MINOR_VERSION 8)
-check_variable_set(PIP_PLATFORM linux_x86_64)
-check_variable_set(DS_PATH "/opt/nvidia/deepstream/deepstream")
+check_variable_set(DS_VERSION 6.2)
+find_package(Python MODULE REQUIRED COMPONENTS Development)
+check_variable_set(PYTHON_MAJOR_VERSION ${Python_VERSION_MAJOR})
+check_variable_set(PYTHON_MINOR_VERSION ${Python_VERSION_MINOR})
+check_variable_set(DS_PATH "/opt/nvidia/deepstream/deepstream-${DS_VERSION}")
 
 
 # Checking values are allowed
@@ -36,23 +38,19 @@ macro(check_variable_allowed var_name var_list)
 endmacro()
 set(PYTHON_MAJVERS_ALLOWED 3)
 check_variable_allowed(PYTHON_MAJOR_VERSION PYTHON_MAJVERS_ALLOWED)
-set(PYTHON_MINVERS_ALLOWED 6 8)
-check_variable_allowed(PYTHON_MINOR_VERSION PYTHON_MINVERS_ALLOWED)
-set(PIP_PLATFORM_ALLOWED linux_x86_64 linux_aarch64)
-check_variable_allowed(PIP_PLATFORM PIP_PLATFORM_ALLOWED)
 
 # Setting C++ values
 set(CMAKE_CXX_STANDARD 17)
 set(CMAKE_CXX_STANDARD_REQUIRED True)
 set(CMAKE_POSITION_INDEPENDENT_CODE ON)
-set(CMAKE_SHARED_LINKER_FLAGS "-Wl,--no-undefined")
 
 # Setting python build versions
-set(PYTHON_VERSION ${PYTHON_MAJOR_VERSION}.${PYTHON_MINOR_VERSION})
-set(PIP_WHEEL pyds-1.1.6-py3-none-${PIP_PLATFORM}.whl)
+set(PYTHON_VERSION ${Python_VERSION})
+find_package(PkgConfig REQUIRED)
+pkg_check_modules(GLIB REQUIRED IMPORTED_TARGET glib-2.0)
+pkg_check_modules(GSTREAMER REQUIRED IMPORTED_TARGET gstreamer-1.0)
+find_package(pybind11 REQUIRED)
 
-# Describing pyds build
-project(pyds DESCRIPTION "Python bindings for Deepstream")
 add_compile_options(-Wall -Wextra -pedantic -O3)
 
 include_directories(
@@ -60,13 +58,7 @@ include_directories(
         ${DS_PATH}/sources/includes/
         include/bind
         include/nvds
-        ../3rdparty/pybind11/include/pybind11/
-        ../3rdparty/pybind11/include/
-        /usr/include/python${PYTHON_VERSION}
-        /usr/include/gstreamer-1.0
-        /usr/include/glib-2.0
-        /usr/lib/aarch64-linux-gnu/glib-2.0/include/
-        /usr/lib/x86_64-linux-gnu/glib-2.0/include
+        ${pybind11_INCLUDE_DIRS}
         )
 
 add_library(pyds SHARED src/pyds.cpp src/utils.cpp src/bindanalyticsmeta.cpp
@@ -78,37 +70,18 @@ add_library(pyds SHARED src/pyds.cpp src/utils.cpp src/bindanalyticsmeta.cpp
 set_target_properties(pyds PROPERTIES PREFIX "")
 set_target_properties(pyds PROPERTIES OUTPUT_NAME "pyds")
 
-set(PYTHON_LIB python${PYTHON_VERSION})
-if(${PYTHON_MINOR_VERSION} EQUAL 6)
-        set(PYTHON_LIB python${PYTHON_VERSION}m)
-endif()
-
-target_link_libraries(pyds pthread dl ${PYTHON_LIB} gstreamer-1.0 glib-2.0)
+target_link_libraries(pyds pthread dl Python::Python PkgConfig::GSTREAMER PkgConfig::GLIB)
+target_link_options(pyds PRIVATE -L=${DS_PATH}/lib)
+target_link_options(pyds PUBLIC "-Wl,--no-undefined")
 
 # Checking deepstream shared libraries and linking them
 function(add_ds_lib libname)
-        set(libpath "${DS_PATH}/lib/lib${libname}.so")
-        if(NOT EXISTS ${libpath})
-                message(FATAL_ERROR "Missing lib${libname}.so at ${libpath}\n"
-                        "please make sure that deepstream is installed")
-        endif()
-        add_library(${libname} SHARED IMPORTED)
-        set_target_properties(${libname} PROPERTIES
-                IMPORTED_LOCATION ${libpath})
-        target_link_libraries(pyds ${libname})
+  find_library(${libname} NAMES ${libname} PATHS ${DS_PATH}/lib REQUIRED NO_DEFAULT_PATH)
+  target_link_libraries(pyds ${libname})
 endfunction()
 
-foreach(nvds_lib nvds_osd nvds_meta nvds_infer nvdsgst_meta nvbufsurface nvbufsurftransform nvdsgst_helper)
+foreach(nvds_lib nvds_osd nvds_meta nvds_infer nvdsgst_meta nvdsgst_helper)
         add_ds_lib(${nvds_lib})
 endforeach()
 
-# Pip wheel build
-add_custom_command(
-        OUTPUT ${PIP_WHEEL}
-        DEPENDS pyds
-        COMMAND python${PYTHON_VERSION} ${CMAKE_SOURCE_DIR}/packaging/setup.py bdist_wheel --plat-name ${PIP_PLATFORM}
-        COMMAND mv -f dist/${PIP_WHEEL} ${PIP_WHEEL}
-        COMMAND rmdir dist
-)
-
-add_custom_target(pip_wheel ALL DEPENDS ${PIP_WHEEL})
+target_link_libraries(pyds nvbufsurface nvbufsurftransform)
diff --git a/bindings/include/pyds.hpp b/bindings/include/pyds.hpp
index 971b0b4..f0c656f 100644
--- a/bindings/include/pyds.hpp
+++ b/bindings/include/pyds.hpp
@@ -19,7 +19,7 @@
 
 #include <memory>
 #include <optional>
-#include <pybind11.h>
+#include <pybind11/pybind11.h>
 #include "pybind11/pybind11.h"
 #include "pybind11/cast.h"
 #include "pybind11/pytypes.h"
@@ -52,4 +52,4 @@ namespace pydeepstream {
     // rewritting ""_a operator from pybind11 namespace and putting it into
     // pydeepstream namespace
     py::arg operator ""_a(const char *str, size_t len);
-}
\ No newline at end of file
+}
diff --git a/bindings/include/utils.hpp b/bindings/include/utils.hpp
index f713b9b..49d6cca 100644
--- a/bindings/include/utils.hpp
+++ b/bindings/include/utils.hpp
@@ -33,7 +33,7 @@
 #include <optional>
 #include <mutex>
 #include <pybind11/cast.h>
-#include <pybind11.h>
+#include <pybind11/pybind11.h>
 
 namespace py = pybind11;
 
-- 
2.25.1

