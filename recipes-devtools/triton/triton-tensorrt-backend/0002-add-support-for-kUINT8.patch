From 4d4933137c23a54bc9058a973754a47b43a4d118 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Sat, 22 Jul 2023 15:06:32 +0100
Subject: [PATCH 2/2] add support for kUINT8

Based on the following commit:
https://github.com/triton-inference-server/tensorrt_backend/commit/114d0cd241eecb2ff78bb5ad4cdb4c138b2ef845

Signed-off-by: Ilies CHERGUI <ilies.chergui@gmail.com>
---
 src/tensorrt_utils.cc | 15 +++++++++++----
 1 file changed, 11 insertions(+), 4 deletions(-)

diff --git a/src/tensorrt_utils.cc b/src/tensorrt_utils.cc
index b6ad3de..eaf9aaa 100644
--- a/src/tensorrt_utils.cc
+++ b/src/tensorrt_utils.cc
@@ -40,13 +40,15 @@ ConvertTrtTypeToDataType(nvinfer1::DataType trt_type)
       return TRITONSERVER_TYPE_FP16;
     case nvinfer1::DataType::kINT8:
       return TRITONSERVER_TYPE_INT8;
+    case nvinfer1::DataType::kUINT8:
+      return TRITONSERVER_TYPE_UINT8;
     case nvinfer1::DataType::kINT32:
       return TRITONSERVER_TYPE_INT32;
     case nvinfer1::DataType::kBOOL:
       return TRITONSERVER_TYPE_BOOL;
+    default:
+      return TRITONSERVER_TYPE_INVALID;
   }
-
-  return TRITONSERVER_TYPE_INVALID;
 }
 
 std::string
@@ -59,13 +61,15 @@ ConvertTrtTypeToConfigDataType(nvinfer1::DataType trt_type)
       return "TYPE_FP16";
     case nvinfer1::DataType::kINT8:
       return "TYPE_INT8";
+    case nvinfer1::DataType::kUINT8:
+      return "TYPE_UINT8";
     case nvinfer1::DataType::kINT32:
       return "TYPE_INT32";
     case nvinfer1::DataType::kBOOL:
       return "TYPE_BOOL";
+    default:
+      return "TYPE_INVALID";
   }
-
-  return "TYPE_INVALID";
 }
 
 bool
@@ -113,6 +117,9 @@ ConvertDataTypeToTrtType(const TRITONSERVER_DataType& dtype)
     case TRITONSERVER_TYPE_INT8:
       trt_type = nvinfer1::DataType::kINT8;
       break;
+    case TRITONSERVER_TYPE_UINT8:
+      trt_type = nvinfer1::DataType::kUINT8;
+      break;
     case TRITONSERVER_TYPE_INT32:
       trt_type = nvinfer1::DataType::kINT32;
       break;
-- 
2.25.1

