From bff723c24978a9f2643d4e337054a6aa2931fd2b Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ilies.chergui@gmail.com>
Date: Sun, 30 Jul 2023 23:33:24 +0100
Subject: [PATCH] Build fixups

Signed-off-by: Ilies CHERGUI <ilies.chergui@gmail.com>
Signed-off-by: Roger Knecht <roger@norberthealth.com>
---
 CMakeLists.txt                                | 16 ++++---------
 src/c++/CMakeLists.txt                        | 24 ++++---------------
 src/c++/library/CMakeLists.txt                | 20 +++++-----------
 src/c++/perf_analyzer/CMakeLists.txt          |  4 ++--
 .../client_backend/triton/CMakeLists.txt      |  4 ++--
 src/python/CMakeLists.txt                     | 22 ++++-------------
 src/python/library/CMakeLists.txt             |  2 +-
 src/python/library/build_wheel.py             |  1 +
 .../library/tritonclient/CMakeLists.txt       |  2 +-
 .../library/tritonclient/utils/CMakeLists.txt |  6 ++---
 .../cuda_shared_memory/cuda_shared_memory.cc  |  1 +
 11 files changed, 32 insertions(+), 70 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index d25043c..f41cd36 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.17)
+cmake_minimum_required(VERSION 3.16)
 
 project(tritonclient LANGUAGES C CXX)
 
@@ -60,16 +60,7 @@ endif()
 #
 # Dependencies
 #
-include(FetchContent)
-
-FetchContent_Declare(
-  repo-third-party
-  GIT_REPOSITORY https://github.com/triton-inference-server/third_party.git
-  GIT_TAG ${TRITON_THIRD_PARTY_REPO_TAG}
-  GIT_SHALLOW ON
-)
 set(TRITON_THIRD_PARTY_INSTALL_PREFIX ${CMAKE_CURRENT_BINARY_DIR}/third-party)
-FetchContent_MakeAvailable(repo-third-party)
 
 # Need to use ExternalProject for our builds so that we can get the
 # correct dependencies between our components and the ExternalProject
@@ -166,7 +157,8 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER
       -DTRITON_ENABLE_GPU:BOOL=${TRITON_ENABLE_GPU}
       -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
       -DCMAKE_INSTALL_PREFIX:PATH=${TRITON_INSTALL_PREFIX}
-    DEPENDS ${_cc_client_depends}
+      -DCUDA_TOOLKIT_ROOT_DIR:PATH=${CUDA_TOOLKIT_ROOT_DIR}
+    INSTALL_COMMAND ""
   )
 endif() # TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER
 
@@ -204,7 +196,9 @@ if(TRITON_ENABLE_PYTHON_HTTP OR TRITON_ENABLE_PYTHON_GRPC)
       -DTRITON_ENABLE_GPU:BOOL=${TRITON_ENABLE_GPU}
       -DCMAKE_BUILD_TYPE:STRING=${CMAKE_BUILD_TYPE}
       -DCMAKE_INSTALL_PREFIX:PATH=${TRITON_INSTALL_PREFIX}
+      -DCUDA_TOOLKIT_ROOT_DIR:PATH=${CUDA_TOOLKIT_ROOT_DIR}
     DEPENDS ${_py_client_depends}
+    INSTALL_COMMAND ""
   )
 endif() # TRITON_ENABLE_PYTHON_HTTP OR TRITON_ENABLE_PYTHON_GRPC
 
diff --git a/src/c++/CMakeLists.txt b/src/c++/CMakeLists.txt
index a641fcb..9e3c6eb 100644
--- a/src/c++/CMakeLists.txt
+++ b/src/c++/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.17)
+cmake_minimum_required(VERSION 3.16)
 
 project(cc-clients LANGUAGES C CXX)
 
@@ -50,27 +50,12 @@ endif()
 #
 # Dependencies
 #
-include(FetchContent)
-
-FetchContent_Declare(
-  repo-common
-  GIT_REPOSITORY https://github.com/triton-inference-server/common.git
-  GIT_TAG ${TRITON_COMMON_REPO_TAG}
-  GIT_SHALLOW ON
-)
 
 if(TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER)
   set(TRITON_COMMON_ENABLE_PROTOBUF ON)
   set(TRITON_COMMON_ENABLE_GRPC ON)
 
   if(TRITON_ENABLE_PERF_ANALYZER)
-    FetchContent_Declare(
-      repo-core
-      GIT_REPOSITORY https://github.com/triton-inference-server/core.git
-      GIT_TAG ${TRITON_CORE_REPO_TAG}
-      GIT_SHALLOW ON 
-    )
-    FetchContent_MakeAvailable(repo-core)
   endif() # TRITON_ENABLE_PERF_ANALYZER
 endif() # TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER
 
@@ -78,13 +63,14 @@ if(NOT TRITON_ENABLE_PERF_ANALYZER AND NOT TRITON_ENABLE_CC_HTTP AND NOT TRITON_
   set(TRITON_COMMON_ENABLE_JSON OFF)
 endif()
 
-FetchContent_MakeAvailable(repo-common)
-
 #
 # CUDA
 #
 if(TRITON_ENABLE_GPU)
-  find_package(CUDAToolkit REQUIRED)
+  enable_language(CUDA)
+  find_package(CUDA REQUIRED)
+  include_directories(${CUDA_INCLUDE_DIRS})
+  link_directories(${CUDA_LIBRARIES})
 endif() # TRITON_ENABLE_GPU
 
 #
diff --git a/src/c++/library/CMakeLists.txt b/src/c++/library/CMakeLists.txt
index e0eed14..bb122a3 100644
--- a/src/c++/library/CMakeLists.txt
+++ b/src/c++/library/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required (VERSION 3.18)
+cmake_minimum_required (VERSION 3.16)
 
 find_package(Threads REQUIRED)
 set(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS TRUE)
@@ -190,7 +190,7 @@ if(TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER)
     if(TRITON_ENABLE_GPU)
       target_link_libraries(
         ${_client_target}
-        PUBLIC CUDA::cudart
+        PUBLIC cudart
       )
     endif() # TRITON_ENABLE_GPU
   endforeach()
@@ -274,12 +274,6 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER)
     )
   endif() # NOT WIN32
 
-  target_link_libraries(
-    http-client-library
-    PUBLIC
-      triton-common-json        # from repo-common
-  )
-
   # libhttpclient_static.a
   add_library(
       httpclient_static STATIC
@@ -291,7 +285,6 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER)
 
   target_link_libraries(
       httpclient_static
-      PRIVATE triton-common-json
       PRIVATE CURL::libcurl
       PUBLIC Threads::Threads
   )
@@ -310,13 +303,12 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER)
        httpclient
        PROPERTIES
          LINK_DEPENDS ${CMAKE_CURRENT_BINARY_DIR}/libhttpclient.ldscript
-         LINK_FLAGS "-Wl,--version-script=libhttpclient.ldscript"
+         LINK_FLAGS "-Wl,--version-script=${CMAKE_CURRENT_BINARY_DIR}/libhttpclient.ldscript"
      )
   endif() # NOT WIN32
 
   target_link_libraries(
       httpclient
-      PRIVATE triton-common-json
       PRIVATE CURL::libcurl
       PUBLIC Threads::Threads
   )
@@ -360,7 +352,7 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER)
     if(TRITON_ENABLE_GPU)
       target_link_libraries(
         ${_client_target}
-        PUBLIC CUDA::cudart
+        PUBLIC cudart
       )
     endif() # TRITON_ENABLE_GPU
   endforeach()
@@ -368,7 +360,7 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER)
   install(
       FILES
       ${CMAKE_CURRENT_SOURCE_DIR}/http_client.h
-      DESTINATION include
+      DESTINATION include/triton
   )
 endif() # TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_PERF_ANALYZER
 
@@ -377,7 +369,7 @@ if(TRITON_ENABLE_CC_HTTP OR TRITON_ENABLE_CC_GRPC OR TRITON_ENABLE_PERF_ANALYZER
       FILES
       ${CMAKE_CURRENT_SOURCE_DIR}/common.h
       ${CMAKE_CURRENT_SOURCE_DIR}/ipc.h
-      DESTINATION include
+      DESTINATION include/triton
   )
 
   include(GNUInstallDirs)
diff --git a/src/c++/perf_analyzer/CMakeLists.txt b/src/c++/perf_analyzer/CMakeLists.txt
index 3682d32..65c30f8 100644
--- a/src/c++/perf_analyzer/CMakeLists.txt
+++ b/src/c++/perf_analyzer/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required (VERSION 3.18)
+cmake_minimum_required (VERSION 3.16)
 
 if(WIN32)
   message("perf_analyzer is not currently supported on Windows because "
@@ -88,7 +88,7 @@ if(TRITON_ENABLE_GPU)
 
   target_link_libraries(
     perf_analyzer
-    PRIVATE CUDA::cudart
+    PRIVATE cudart
   )
 endif()
 
diff --git a/src/c++/perf_analyzer/client_backend/triton/CMakeLists.txt b/src/c++/perf_analyzer/client_backend/triton/CMakeLists.txt
index cdb7410..c4373d5 100644
--- a/src/c++/perf_analyzer/client_backend/triton/CMakeLists.txt
+++ b/src/c++/perf_analyzer/client_backend/triton/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required (VERSION 3.18)
+cmake_minimum_required (VERSION 3.16)
 
 set(
     TRITON_CLIENT_BACKEND_SRCS
@@ -51,6 +51,6 @@ target_link_libraries(
 if(${TRITON_ENABLE_GPU})
   target_link_libraries(
     triton-client-backend-library
-    PRIVATE CUDA::cudart
+    PRIVATE cudart
   )
 endif() # TRITON_ENABLE_GPU
diff --git a/src/python/CMakeLists.txt b/src/python/CMakeLists.txt
index 444df2c..acaf2af 100644
--- a/src/python/CMakeLists.txt
+++ b/src/python/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required(VERSION 3.17)
+cmake_minimum_required(VERSION 3.16)
 
 project(python-clients LANGUAGES C CXX)
 
@@ -48,27 +48,15 @@ endif()
 #
 # Dependencies
 #
-include(FetchContent)
-
-FetchContent_Declare(
-  repo-common
-  GIT_REPOSITORY https://github.com/triton-inference-server/common.git
-  GIT_TAG ${TRITON_COMMON_REPO_TAG}
-  GIT_SHALLOW ON
-)
-
-if(TRITON_ENABLE_PYTHON_GRPC)
-  set(TRITON_COMMON_ENABLE_PROTOBUF ON)
-  set(TRITON_COMMON_ENABLE_GRPC ON)
-endif() # TRITON_ENABLE_PYTHON_GRPC
-
-FetchContent_MakeAvailable(repo-common)
 
 #
 # CUDA
 #
 if(${TRITON_ENABLE_GPU})
-  find_package(CUDAToolkit REQUIRED)
+  enable_language(CUDA)
+  find_package(CUDA REQUIRED)
+  include_directories(${CUDA_INCLUDE_DIRS})
+  link_directories(${CUDA_LIBRARIES})
 endif() # TRITON_ENABLE_GPU
 
 #
diff --git a/src/python/library/CMakeLists.txt b/src/python/library/CMakeLists.txt
index 0124865..e66d527 100644
--- a/src/python/library/CMakeLists.txt
+++ b/src/python/library/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required (VERSION 3.18)
+cmake_minimum_required (VERSION 3.16)
 
 add_subdirectory(tritonclient)
 
diff --git a/src/python/library/build_wheel.py b/src/python/library/build_wheel.py
index 442d6fe..3b975e8 100644
--- a/src/python/library/build_wheel.py
+++ b/src/python/library/build_wheel.py
@@ -31,6 +31,7 @@ import pathlib
 import re
 import shutil
 import subprocess
+import sys
 from distutils.dir_util import copy_tree
 from tempfile import mkstemp
 
diff --git a/src/python/library/tritonclient/CMakeLists.txt b/src/python/library/tritonclient/CMakeLists.txt
index ee95fd7..89d36a2 100644
--- a/src/python/library/tritonclient/CMakeLists.txt
+++ b/src/python/library/tritonclient/CMakeLists.txt
@@ -24,7 +24,7 @@
 # (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 # OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 
-cmake_minimum_required (VERSION 3.18)
+cmake_minimum_required (VERSION 3.16)
 
 if(${TRITON_ENABLE_PYTHON_HTTP})
   file(COPY http DESTINATION .)
diff --git a/src/python/library/tritonclient/utils/CMakeLists.txt b/src/python/library/tritonclient/utils/CMakeLists.txt
index 98e9d19..7b74672 100644
--- a/src/python/library/tritonclient/utils/CMakeLists.txt
+++ b/src/python/library/tritonclient/utils/CMakeLists.txt
@@ -35,9 +35,9 @@ if(NOT WIN32)
   add_library(cshm SHARED shared_memory/shared_memory.cc)
   if(${TRITON_ENABLE_GPU})
     target_compile_definitions(cshm PUBLIC TRITON_ENABLE_GPU=1)
-    target_link_libraries(cshm PUBLIC CUDA::cudart)
+    target_link_libraries(cshm INTERFACE cudart)
   endif() # TRITON_ENABLE_GPU
-  target_link_libraries(cshm PRIVATE rt)
+  target_link_libraries(cshm INTERFACE rt)
 
   #
   # libccudashm.so
@@ -52,7 +52,7 @@ if(NOT WIN32)
     )
     target_include_directories(ccudashm PUBLIC ${CUDA_INCLUDE_DIRS})
     target_compile_definitions(ccudashm PUBLIC TRITON_ENABLE_GPU=1)
-    target_link_libraries(ccudashm PUBLIC CUDA::cudart)
+    target_link_libraries(ccudashm PUBLIC cudart)
   endif() # TRITON_ENABLE_GPU
 endif() # WIN32
 
diff --git a/src/python/library/tritonclient/utils/cuda_shared_memory/cuda_shared_memory.cc b/src/python/library/tritonclient/utils/cuda_shared_memory/cuda_shared_memory.cc
index ea86e50..0efcc8a 100644
--- a/src/python/library/tritonclient/utils/cuda_shared_memory/cuda_shared_memory.cc
+++ b/src/python/library/tritonclient/utils/cuda_shared_memory/cuda_shared_memory.cc
@@ -29,6 +29,7 @@
 #include <cuda_runtime_api.h>
 #include <cstring>
 #include <iostream>
+#include <cstdint>
 #include "../shared_memory/shared_memory_handle.h"
 
 extern "C" {
-- 
2.25.1

