From 771d9e435c7948059167b1e2243e2bf611e229d2 Mon Sep 17 00:00:00 2001
From: Ilies CHERGUI <ichergui@nvidia.com>
Date: Wed, 2 Jul 2025 17:13:57 +0100
Subject: [PATCH] Fixups for cross building in OE

Upstream-Status: Inappropriate [OE-specific]
Signed-off-by: Ilies CHERGUI <ichergui@nvidia.com>
---
 Makefile          | 67 ++++++++++++++++-------------------------------
 nvrtc_cli_test.sh | 38 +++++++++++++--------------
 2 files changed, 42 insertions(+), 63 deletions(-)

diff --git a/Makefile b/Makefile
index c8efcb7..4375ffc 100644
--- a/Makefile
+++ b/Makefile
@@ -1,5 +1,4 @@
 
-DOXYGEN ?= doxygen
 CXXFLAGS ?= -O3 -Wall -Wconversion -Wextra -Wshadow -g -fmessage-length=80
 
 CXX11 ?= 1
@@ -10,12 +9,14 @@ CUDA_INC_DIR ?= $(CUDA_DIR)/include
 CXXFLAGS += -pthread
 
 ifeq ($(CXX11),1)
-	CXXFLAGS += -std=c++11
+	CXXFLAGS += -std=c++14
 endif
 
 EMBED_BEGIN = -rdynamic -Wl,-b,binary,
 EMBED_END   = ,-b,default
 
+STRINGIFY ?= /usr/bin/stringify
+
 NVCC ?= $(CUDA_DIR)/bin/nvcc
 NVCC_EMBED_BEGIN = -rdynamic -Wl\,-b\,binary\,
 NVCC_EMBED_END   = \,-b\,default
@@ -45,66 +46,44 @@ all: jitify_example jitify_test nvrtc_cli
 JITIFY_EXAMPLE_DEFINES = -DCUDA_INC_DIR="\"$(CUDA_INC_DIR)\""
 
 jitify_example: jitify_example.cpp $(HEADERS)
-	$(CXX) -o $@ $< $(CXXFLAGS) $(INC) $(LIB) $(EMBED) $(JITIFY_EXAMPLE_DEFINES)
+	$(CXX) -o $@ $< $(CXXFLAGS) -Wl,--hash-style=gnu $(INC) $(LIB) $(EMBED) $(JITIFY_EXAMPLE_DEFINES)
 
-%.jit: % stringify
-	./stringify $< > $@
+%.jit: % $(STRINGIFY)
+	$(STRINGIFY) $< > $@
 
 stringify: stringify.cpp
 	$(CXX) -o $@ $< -O3 -Wall
 
 nvrtc_cli: nvrtc_cli.cpp
-	$(CXX) -o $@ $< -O3 -Wall -Wextra -std=c++11 -I$(CUDA_INC_DIR) -L$(CUDA_LIB_DIR) -lnvrtc
-	bash nvrtc_cli_test.sh
-
-get-deps:
-	sudo apt-get update
-	# CMake is needed to build gtest.
-	sudo apt-get install -y cmake
-.PHONY: get-deps
-
-GTEST_DIR = googletest
-GTEST_STATIC_LIB = $(GTEST_DIR)/build/lib/libgtest.a
-$(GTEST_STATIC_LIB):
-	rm -rf $(GTEST_DIR)
-	git clone https://github.com/google/googletest.git $(GTEST_DIR)
-	cd $(GTEST_DIR) && git checkout release-1.12.1 && rm -rf build && mkdir build && cd build && cmake .. && make -j8
-
-GTEST_INC = -I$(GTEST_DIR)/googletest/include
-GTEST_LIB = -L$(GTEST_DIR)/build/lib -lgtest -lgtest_main
-
-CUB_DIR ?= /tmp/cub
-CUB_HEADER = $(CUB_DIR)/cub/cub.cuh
-$(CUB_HEADER):
-	rm -rf $(CUB_DIR)
-	git clone https://github.com/NVlabs/cub.git $(CUB_DIR)
-	cd $(CUB_DIR) && git checkout v1.8.0
-
-CUB_INC = -I$(CUB_DIR)
+	$(CXX) -o $@ $<
+
+.PHONY: stringify
+
+nvrtc_cli: nvrtc_cli.cpp
+	$(CXX) -o $@ $< -I$(CUDA_INC_DIR) -L$(CUDA_LIB_DIR) -Wl,--hash-style=gnu -lnvrtc
+
+GTEST_INC_DIR ?=
+GTEST_LIB_DIR ?=
+GTEST_STATIC_LIB ?= $(GTEST_LIB_DIR)/libgtest.a
+GTEST_INC ?= -I$(GTEST_INC_DIR)
+GTEST_LIB ?= -L$(GTEST_LIB_DIR)/ -lgtest -lgtest_main
+
+CUB_HEADER ?= $(CUB_DIR)/cub.cuh
+CUB_INC ?= -I$(CUB_DIR)
 JITIFY_TEST_DEFINES = -DCUDA_INC_DIR="\"$(CUDA_INC_DIR)\"" -DCUB_DIR="\"$(CUB_DIR)\""
 
 jitify_test: jitify_test.cu $(HEADERS) $(GTEST_STATIC_LIB) $(CUB_HEADER) Makefile
 	# Link a 2nd compilation unit to ensure no multiple definition errors.
 	echo "#include \"jitify.hpp\"\n#include \"example_headers/my_header1.cuh.jit\"" \
         > jitify_2nd_compilation_unit.cpp
-	$(NVCC) -o $@ $< jitify_2nd_compilation_unit.cpp -rdc=true -std=c++11 -O3 \
-        -Xcompiler "$(CXXFLAGS) $(NVCC_EMBED) -pthread" \
+	$(NVCC) -ccbin ${CUDAHOSTCXX} ${CUDAFLAGS} -o $@ $< jitify_2nd_compilation_unit.cpp -rdc=true \
+		-Xcompiler "$(CXXFLAGS) $(NVCC_EMBED) -pthread" \
         $(JITIFY_TEST_DEFINES) $(INC) $(GTEST_INC) $(CUB_INC) $(LIB) $(GTEST_LIB)
 
-test: jitify_test
-	./jitify_test
-.PHONY: test
-
-doc: jitify.hpp Doxyfile
-	$(DOXYGEN) Doxyfile
-.PHONY: doc
-
 clean:
 	rm -f stringify
 	rm -f example_headers/*.jit
 	rm -f jitify_example
 	rm -f jitify_test
-	rm -rf $(GTEST_DIR)
-	rm -rf $(CUB_DIR)
 	rm -f *.o
 .PHONY: clean
diff --git a/nvrtc_cli_test.sh b/nvrtc_cli_test.sh
index 4e16b85..dc83eab 100644
--- a/nvrtc_cli_test.sh
+++ b/nvrtc_cli_test.sh
@@ -24,35 +24,35 @@ EndOfMessage
 ptx_options="$test_input_file -o $test_output_file_ptx -lineinfo -ptx"
 cubin_options="$test_input_file -o $test_output_file_cubin -lineinfo -cubin"
 
-./nvrtc_cli $ptx_options
+nvrtc_cli $ptx_options
 grep -q "Generated by NVIDIA NVVM Compiler" "$test_output_file_ptx"
 grep -q "\.version" "$test_output_file_ptx"
 grep -q "\.target" "$test_output_file_ptx"
 
-./nvrtc_cli $cubin_options
+nvrtc_cli $cubin_options
 file "$test_output_file_cubin" | \
     grep -q "ELF 64-bit LSB executable, NVIDIA CUDA architecture"
 
-./nvrtc_cli $ptx_options -arch=sm_70
-grep -q "\.target sm_70" "$test_output_file_ptx"
+nvrtc_cli $ptx_options -arch=sm_@CUDA_ACHITECTURE@
+grep -q "\.target sm_@CUDA_ACHITECTURE@" "$test_output_file_ptx"
 
-./nvrtc_cli $ptx_options -ne "my_kernel<float>" |
+nvrtc_cli $ptx_options -ne "my_kernel<float>" |
     grep -q "\"my_kernel<float>\" -> _Z9my_kernel"
 grep -q "\.entry _Z9my_kernel" "$test_output_file_ptx"
 
-./nvrtc_cli -h | grep -q "\-\-help"
-./nvrtc_cli --help | grep -q "\-\-help"
-./nvrtc_cli -V | grep -q "Cuda compilation tools, release"
-./nvrtc_cli --version | grep -q "Cuda compilation tools, release"
-./nvrtc_cli -arch-ls | grep -q "compute_70"
-./nvrtc_cli --list-gpu-arch | grep -q "compute_70"
-./nvrtc_cli -arch-ls | grep -q "(default)"
-./nvrtc_cli -code-ls | grep -q "sm_70"
-./nvrtc_cli --list-gpu-code | grep -q "sm_70"
-./nvrtc_cli -code-ls | grep -q "(default)"
-./nvrtc_cli $ptx_options -time - | grep -q ", ms"
-./nvrtc_cli $ptx_options --time - | grep -q ", ms"
-./nvrtc_cli $ptx_options -Lignored -L ignored --library-path ignored
-cat $test_input_file | ./nvrtc_cli - | grep -q ".target"
+nvrtc_cli -h | grep -q "\-\-help"
+nvrtc_cli --help | grep -q "\-\-help"
+nvrtc_cli -V | grep -q "Cuda compilation tools, release"
+nvrtc_cli --version | grep -q "Cuda compilation tools, release"
+nvrtc_cli -arch-ls | grep -q "compute_70"
+nvrtc_cli --list-gpu-arch | grep -q "compute_70"
+nvrtc_cli -arch-ls | grep -q "(default)"
+nvrtc_cli -code-ls | grep -q "sm_70"
+nvrtc_cli --list-gpu-code | grep -q "sm_70"
+nvrtc_cli -code-ls | grep -q "(default)"
+nvrtc_cli $ptx_options -time - | grep -q ", ms"
+nvrtc_cli $ptx_options --time - | grep -q ", ms"
+nvrtc_cli $ptx_options -Lignored -L ignored --library-path ignored
+cat $test_input_file | nvrtc_cli - | grep -q ".target"
 
 echo "Test PASSED"
-- 
2.34.1

